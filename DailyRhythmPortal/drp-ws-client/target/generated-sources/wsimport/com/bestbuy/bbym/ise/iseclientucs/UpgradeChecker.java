
package com.bestbuy.bbym.ise.iseclientucs;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.0
 * 
 */
@WebService(name = "UpgradeChecker", targetNamespace = "http://bestbuy.com/bbym/ucs")
public interface UpgradeChecker {


    /**
     * 
     * @param upgradeEligibilityRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.UpgradeEligibilityResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws CAPException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws InvalidAccountPasswordException_Exception
     * @throws AccountLockedException_Exception
     * @throws BusinessCustomerException_Exception
     */
    @WebMethod
    @WebResult(name = "upgradeEligibilityResponse", targetNamespace = "")
    @RequestWrapper(localName = "getUpgradeEligibility", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetUpgradeEligibility")
    @ResponseWrapper(localName = "getUpgradeEligibilityResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetUpgradeEligibilityResponse")
    public UpgradeEligibilityResponse getUpgradeEligibility(
        @WebParam(name = "upgradeEligibilityRequest", targetNamespace = "")
        UpgradeEligibilityRequest upgradeEligibilityRequest)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param upgradeEligibilityWithCachedUpgradeCheckRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.UpgradeEligibilityResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws CAPException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws AccountLockedException_Exception
     * @throws BusinessCustomerException_Exception
     * @throws InvalidAccountPasswordException_Exception
     */
    @WebMethod
    @WebResult(name = "upgradeEligibilityResponse", targetNamespace = "")
    @RequestWrapper(localName = "getCachedUpgradeEligibility", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetCachedUpgradeEligibility")
    @ResponseWrapper(localName = "getCachedUpgradeEligibilityResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetCachedUpgradeEligibilityResponse")
    public UpgradeEligibilityResponse getCachedUpgradeEligibility(
        @WebParam(name = "upgradeEligibilityWithCachedUpgradeCheckRequest", targetNamespace = "")
        CachedUpgradeEligibilityRequest upgradeEligibilityWithCachedUpgradeCheckRequest)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param upgradeEligibilityRequest
     * @return
     *     returns long
     * @throws UnknownFailureException_Exception
     */
    @WebMethod
    @WebResult(name = "upgradeEligibilityResponseAsync", targetNamespace = "")
    @RequestWrapper(localName = "getUpgradeEligibilityAsync", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetUpgradeEligibilityAsync")
    @ResponseWrapper(localName = "getUpgradeEligibilityAsyncResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetUpgradeEligibilityAsyncResponse")
    public long getUpgradeEligibilityAsync(
        @WebParam(name = "upgradeEligibilityRequest", targetNamespace = "")
        UpgradeEligibilityRequest upgradeEligibilityRequest)
        throws UnknownFailureException_Exception
    ;

    /**
     * 
     * @param resultId
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.UpgradeEligibilityResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws CAPException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws BusinessCustomerException_Exception
     * @throws AccountLockedException_Exception
     * @throws InvalidAccountPasswordException_Exception
     */
    @WebMethod
    @WebResult(name = "upgradeEligibilityResponseAsyncPoll", targetNamespace = "")
    @RequestWrapper(localName = "getUpgradeEligibilityAsyncPoll", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetUpgradeEligibilityAsyncPoll")
    @ResponseWrapper(localName = "getUpgradeEligibilityAsyncPollResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetUpgradeEligibilityAsyncPollResponse")
    public UpgradeEligibilityResponse getUpgradeEligibilityAsyncPoll(
        @WebParam(name = "resultId", targetNamespace = "")
        long resultId)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param notificationStatusGetRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.NotificationStatusGetResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws CAPException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws AccountLockedException_Exception
     * @throws InvalidAccountPasswordException_Exception
     * @throws BusinessCustomerException_Exception
     */
    @WebMethod
    @WebResult(name = "notificationStatusGetResponse", targetNamespace = "")
    @RequestWrapper(localName = "getNotificationStatus", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetNotificationStatus")
    @ResponseWrapper(localName = "getNotificationStatusResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetNotificationStatusResponse")
    public NotificationStatusGetResponse getNotificationStatus(
        @WebParam(name = "notificationStatusGetRequest", targetNamespace = "")
        NotificationStatusGetRequest notificationStatusGetRequest)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param notificationStatusGetRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.NotificationStatusGetResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws CAPException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws AccountLockedException_Exception
     * @throws InvalidAccountPasswordException_Exception
     * @throws BusinessCustomerException_Exception
     */
    @WebMethod
    @WebResult(name = "notificationStatusGetResponse", targetNamespace = "")
    @RequestWrapper(localName = "getNotificationStatusPlus", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetNotificationStatusPlus")
    @ResponseWrapper(localName = "getNotificationStatusPlusResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetNotificationStatusPlusResponse")
    public NotificationStatusGetResponse getNotificationStatusPlus(
        @WebParam(name = "notificationStatusGetRequest", targetNamespace = "")
        NotificationStatusGetRequest notificationStatusGetRequest)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param notificationStatusPutRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.NotificationStatusPutResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws CAPException_Exception
     * @throws InvalidAccountPasswordException_Exception
     * @throws AccountLockedException_Exception
     * @throws BusinessCustomerException_Exception
     */
    @WebMethod
    @WebResult(name = "notificationStatusPutResponse", targetNamespace = "")
    @RequestWrapper(localName = "putNotificationStatus", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatus")
    @ResponseWrapper(localName = "putNotificationStatusResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatusResponse")
    public NotificationStatusPutResponse putNotificationStatus(
        @WebParam(name = "notificationStatusPutRequest", targetNamespace = "")
        NotificationStatusPutRequest notificationStatusPutRequest)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param notificationStatusPutRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.NotificationStatusPutResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws CAPException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws InvalidAccountPasswordException_Exception
     * @throws AccountLockedException_Exception
     * @throws BusinessCustomerException_Exception
     */
    @WebMethod
    @WebResult(name = "notificationStatusPutResponse", targetNamespace = "")
    @RequestWrapper(localName = "putNotificationStatusPlus", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatusPlus")
    @ResponseWrapper(localName = "putNotificationStatusPlusResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatusPlusResponse")
    public NotificationStatusPutResponse putNotificationStatusPlus(
        @WebParam(name = "notificationStatusPutRequest", targetNamespace = "")
        NotificationStatusPutRequest notificationStatusPutRequest)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param notificationStatusMultiPutRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.NotificationStatusMultiPutResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws CAPException_Exception
     * @throws BusinessCustomerException_Exception
     * @throws InvalidAccountPasswordException_Exception
     * @throws AccountLockedException_Exception
     */
    @WebMethod
    @WebResult(name = "notificationStatusMultiPutResponse", targetNamespace = "")
    @RequestWrapper(localName = "putNotificationStatusMulti", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatusMulti")
    @ResponseWrapper(localName = "putNotificationStatusMultiResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatusMultiResponse")
    public NotificationStatusMultiPutResponse putNotificationStatusMulti(
        @WebParam(name = "notificationStatusMultiPutRequest", targetNamespace = "")
        NotificationStatusMultiPutRequest notificationStatusMultiPutRequest)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param notificationStatusMultiPutRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.NotificationStatusMultiPutResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws CAPException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws AccountLockedException_Exception
     * @throws BusinessCustomerException_Exception
     * @throws InvalidAccountPasswordException_Exception
     */
    @WebMethod
    @WebResult(name = "notificationStatusMultiPutResponse", targetNamespace = "")
    @RequestWrapper(localName = "putNotificationStatusPlusMulti", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatusPlusMulti")
    @ResponseWrapper(localName = "putNotificationStatusPlusMultiResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatusPlusMultiResponse")
    public NotificationStatusMultiPutResponse putNotificationStatusPlusMulti(
        @WebParam(name = "notificationStatusMultiPutRequest", targetNamespace = "")
        NotificationStatusMultiPutRequest notificationStatusMultiPutRequest)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param notificationStatusWithCachedUpgradeCheckPutRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.NotificationStatusWithCachedUpgradeCheckPutResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws AccountNotFoundException_Exception
     * @throws AuthenticationFailureException_Exception
     * @throws CAPException_Exception
     * @throws InvalidAccountPasswordException_Exception
     * @throws BusinessCustomerException_Exception
     * @throws AccountLockedException_Exception
     */
    @WebMethod
    @WebResult(name = "notificationStatusWithCachedUpgradeCheckPutResponse", targetNamespace = "")
    @RequestWrapper(localName = "putNotificationStatusWithCachedUpgradeCheck", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatusWithCachedUpgradeCheck")
    @ResponseWrapper(localName = "putNotificationStatusWithCachedUpgradeCheckResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.PutNotificationStatusWithCachedUpgradeCheckResponse")
    public NotificationStatusWithCachedUpgradeCheckPutResponse putNotificationStatusWithCachedUpgradeCheck(
        @WebParam(name = "notificationStatusWithCachedUpgradeCheckPutRequest", targetNamespace = "")
        NotificationStatusWithCachedUpgradeCheckPutRequest notificationStatusWithCachedUpgradeCheckPutRequest)
        throws AccountLockedException_Exception, AccountNotFoundException_Exception, AuthenticationFailureException_Exception, BusinessCustomerException_Exception, CAPException_Exception, InvalidAccountPasswordException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param scorecardRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.ScorecardResponse
     * @throws InvalidArgumentException_Exception
     * @throws UnknownFailureException_Exception
     * @throws AccountNotFoundException_Exception
     */
    @WebMethod
    @WebResult(name = "upgradeEligibilityResponse", targetNamespace = "")
    @RequestWrapper(localName = "getScorecard", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetScorecard")
    @ResponseWrapper(localName = "getScorecardResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetScorecardResponse")
    public ScorecardResponse getScorecard(
        @WebParam(name = "scorecardRequest", targetNamespace = "")
        ScorecardRequest scorecardRequest)
        throws AccountNotFoundException_Exception, InvalidArgumentException_Exception, UnknownFailureException_Exception
    ;

    /**
     * 
     * @param carrierAndUpgradeCheckerStatusRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.CarrierAndUpgradeCheckerStatusResponse
     * @throws UnknownFailureException_Exception
     */
    @WebMethod
    @WebResult(name = "carrierAndUpgradeCheckerStatusResponse", targetNamespace = "")
    @RequestWrapper(localName = "getCarrierAndUpgradeCheckerStatus", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetCarrierAndUpgradeCheckerStatus")
    @ResponseWrapper(localName = "getCarrierAndUpgradeCheckerStatusResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetCarrierAndUpgradeCheckerStatusResponse")
    public CarrierAndUpgradeCheckerStatusResponse getCarrierAndUpgradeCheckerStatus(
        @WebParam(name = "carrierAndUpgradeCheckerStatusRequest", targetNamespace = "")
        CarrierAndUpgradeCheckerStatusRequest carrierAndUpgradeCheckerStatusRequest)
        throws UnknownFailureException_Exception
    ;

    /**
     * 
     * @param upgradeCheckHistoryRequest
     * @return
     *     returns com.bestbuy.bbym.ise.iseclientucs.UpgradeCheckHistoryResponse
     * @throws UnknownFailureException_Exception
     * @throws AccountNotFoundException_Exception
     */
    @WebMethod
    @WebResult(name = "upgradeCheckHistoryResponse", targetNamespace = "")
    @RequestWrapper(localName = "getUpgradeCheckHistory", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetUpgradeCheckHistory")
    @ResponseWrapper(localName = "getUpgradeCheckHistoryResponse", targetNamespace = "http://bestbuy.com/bbym/ucs", className = "com.bestbuy.bbym.ise.iseclientucs.GetUpgradeCheckHistoryResponse")
    public UpgradeCheckHistoryResponse getUpgradeCheckHistory(
        @WebParam(name = "upgradeCheckHistoryRequest", targetNamespace = "")
        UpgradeCheckHistoryRequest upgradeCheckHistoryRequest)
        throws AccountNotFoundException_Exception, UnknownFailureException_Exception
    ;

}
